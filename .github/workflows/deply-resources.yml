name: Deploy AWS resources

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Configure AWS Credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    # Stack 1
    - name: Deploy S3 Stack
      run: |
        aws cloudformation deploy \
          --template-file cloudformation/s3.yml \
          --stack-name salsaTracker-S3BucketStack \
          --capabilities CAPABILITY_NAMED_IAM \
          --region us-east-1 \
          --tags Project=salsa-tracker

    # Stack 2
    - name: Deploy CDN/DNS stack
      run: |
        aws cloudformation deploy \
          --template-file cloudformation/cdn-dns.yml \
          --stack-name salsaTracker-cdndnsStack \
          --capabilities CAPABILITY_NAMED_IAM \
          --parameter-overrides AcmCertificateArn=${{ secrets.ACM_CERTIFICATE_ARN }}
    
    # Stack 3
    - name: Deploy DB Stack
      run: |
        aws cloudformation deploy \
          --template-file cloudformation/db.yml \
          --stack-name salsaTracker-DBStack \
          --capabilities CAPABILITY_NAMED_IAM \
          --region us-east-1 \
          --tags Project=salsa-tracker
        
    # Stack 5
    - name: Deploy Lambda Role Stack
      run: |
        aws cloudformation deploy \
          --template-file cloudformation/lambda-role.yml \
          --stack-name salsaTracker-LambdaRoleStack \
          --capabilities CAPABILITY_NAMED_IAM \
          --region us-east-1 \
          --tags Project=salsa-tracker

    - name: Get Lambda Role ARN
      run: |
        ROLE_ARN=$(aws cloudformation describe-stacks \
          --stack-name salsaTracker-LambdaRoleStack \
          --query "Stacks[0].Outputs[?OutputKey=='SalsaLambdaExecutionRoleARN'].OutputValue" \
          --output text)
        echo "ROLE_ARN=$ROLE_ARN" >> $GITHUB_ENV

    # Upload Python code to lambda
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11.3  # Adjust to the version you're using in Lambda

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r lambda/requirements.txt

    - name: Zip Lambda Function
      run: |
        cd lambda
        zip -r ../functions.zip .

    - name: Check if Lambda function exists
      id: check_lambda
      run: |
        if aws lambda get-function --function-name SalsaTrackerFunction > /dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_ENV
        else
          echo "exists=false" >> $GITHUB_ENV
        fi
    
    - name: Create Lambda function if it does not exist
      if: env.exists == 'false'
      run: |
        aws lambda create-function \
          --function-name SalsaTrackerFunction \
          --runtime python3.11.3 \
          --handler SalsaTrackerFunction.lambda_handler \
          --zip-file fileb://functions.zip \
          --role $ROLE_ARN

    - name: Deploy Lambda function
      uses: appleboy/lambda-action@v0.2.0
      with:
        function_name: SalsaTrackerFunction  
        zip_file: functions.zip
        aws_region: us-east-1
        timeout: 60
        role: ${{ env.ROLE_ARN }}
  
    # # Stack 4
    # - name: Deploy API Gateway Stack
    #   run: |
    #     aws cloudformation deploy \
    #       --template-file cloudformation/api-gateway.yml \
    #       --stack-name salsaTracker-APIStack \
    #       --capabilities CAPABILITY_NAMED_IAM \
    #       --region us-east-1 \
    #       --tags Project=salsa-tracker